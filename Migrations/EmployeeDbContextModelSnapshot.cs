// <auto-generated />
using System;
using FirstDotnetCoreMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FirstDotnetCoreMVC.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FirstDotnetCoreMVC.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FirstDotnetCoreMVC.Models.EmployeeAddress", b =>
                {
                    b.Property<int>("EmployeeAddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int?>("EmployeeId");

                    b.Property<string>("Region");

                    b.Property<string>("Street");

                    b.HasKey("EmployeeAddressId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAddress");
                });

            modelBuilder.Entity("FirstDotnetCoreMVC.Models.EmployeeDetail", b =>
                {
                    b.Property<int>("EmployeeDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDay");

                    b.Property<int?>("ChildCount");

                    b.Property<string>("DirectorName");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("HasFamily");

                    b.HasKey("EmployeeDetailId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeDetails");
                });

            modelBuilder.Entity("FirstDotnetCoreMVC.Models.EmployeeAddress", b =>
                {
                    b.HasOne("FirstDotnetCoreMVC.Models.Employee", "Employee")
                        .WithMany("EmployeeAddress")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("FirstDotnetCoreMVC.Models.EmployeeDetail", b =>
                {
                    b.HasOne("FirstDotnetCoreMVC.Models.Employee", "Employee")
                        .WithOne("EmployeeDetail")
                        .HasForeignKey("FirstDotnetCoreMVC.Models.EmployeeDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
